[workspace.package]
license = "GPL-3.0-or-later"
authors = ["Magport Team"]
homepage = "https://github.com/Magport"
repository = "https://github.com/Magport/Popsicle/"
edition = "2021"

[workspace]
members = [
    "node",
    "runtime",
    "pallets/*",
    "primitives/*",
    "client/*",
]
resolver = "2"

[workspace.lints.rust]
suspicious_double_ref_op = { level = "allow", priority = 2 }

[workspace.lints.clippy]
all = { level = "allow", priority = 0 }
correctness = { level = "warn", priority = 1 }
complexity = { level = "warn", priority = 1 }
if-same-then-else = { level = "allow", priority = 2 }
zero-prefixed-literal = { level = "allow", priority = 2 }            # 00_1000_000
type_complexity = { level = "allow", priority = 2 }                  # raison d'etre
nonminimal-bool = { level = "allow", priority = 2 }                  # maybe
borrowed-box = { level = "allow", priority = 2 }                     # Reasonable to fix this one
too-many-arguments = { level = "allow", priority = 2 }               # (Turning this on would lead to)
needless-lifetimes = { level = "allow", priority = 2 }               # generated code
unnecessary_cast = { level = "allow", priority = 2 }                 # Types may change
identity-op = { level = "allow", priority = 2 }                      # One case where we do 0 +
useless_conversion = { level = "allow", priority = 2 }               # Types may change
unit_arg = { level = "allow", priority = 2 }                         # stylistic
option-map-unit-fn = { level = "allow", priority = 2 }               # stylistic
bind_instead_of_map = { level = "allow", priority = 2 }              # stylistic
erasing_op = { level = "allow", priority = 2 }                       # E.g. 0 * DOLLARS
eq_op = { level = "allow", priority = 2 }                            # In tests we test equality.
while_immutable_condition = { level = "allow", priority = 2 }        # false positives
needless_option_as_deref = { level = "allow", priority = 2 }         # false positives
derivable_impls = { level = "allow", priority = 2 }                  # false positives
stable_sort_primitive = { level = "allow", priority = 2 }            # prefer stable sort
extra-unused-type-parameters = { level = "allow", priority = 2 }     # stylistic
default_constructed_unit_structs = { level = "allow", priority = 2 } # stylistic

[workspace.dependencies]
polkavm = "0.9.3"
polkavm-linker = "0.9.2"
polkavm-derive = "0.9.1"
log = { version = "0.4.20", default-features = false }
quote = { version = "1.0.33" }
serde = { version = "1.0.197", default-features = false }
serde-big-array = { version = "0.3.2" }
serde_derive = { version = "1.0.117" }
serde_json = { version = "1.0.114", default-features = false }
serde_yaml = { version = "0.9" }
syn = { version = "2.0.50" }
thiserror = { version = "1.0.48" }
similar-asserts = "1.1.0"
smallvec = "1.11.0"
hex-literal = { version = "0.4.1"}
color-print = "0.3.4"
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = [
	"derive",
] }
scale-info = { version = "2.10.0", default-features = false, features = [
	"derive",
] }
schnorrkel = { version = "0.11.4", default-features = false, features = [
    "preaudit_deprecated",
] }

# Substrate / FRAME
frame-benchmarking = { version = "31.0.0", default-features = false}
frame-executive = { version = "31.0.0", default-features = false }
frame-support = { version = "31.0.0", default-features = false }
frame-system = { version = "31.0.0", default-features = false }
frame-system-benchmarking = { version = "31.0.0", default-features = false}
frame-system-rpc-runtime-api = { version = "29.0.0", default-features = false }
frame-try-runtime = { version = "0.37.0", default-features = false}

# FRAME Pallets
pallet-aura = { version = "30.0.0", default-features = false }
pallet-authorship = { version = "31.0.0", default-features = false }
pallet-balances = { version = "31.0.0", default-features = false }
pallet-assets = { version = "32.0.0", default-features = false }
pallet-message-queue = { version = "34.0.0", default-features = false }
pallet-session = { version = "31.0.0", default-features = false }
pallet-sudo = { version = "31.0.0", default-features = false }
pallet-timestamp = { version = "30.0.0", default-features = false }
pallet-transaction-payment = { version = "31.0.0", default-features = false }
pallet-transaction-payment-rpc-runtime-api = { version = "31.0.0", default-features = false }
pallet-utility = { version = "31.0.0", default-features = false }

# Substrate	Primitives
sp-api = { version = "29.0.0", default-features = false }
sp-block-builder = { version = "29.0.0", default-features = false }
sp-consensus-aura = { version = "0.35.0", default-features = false }
sp-core = { version = "31.0.0", default-features = false }
sp-genesis-builder = { version = "0.10.0", default-features = false }
sp-inherents = { version = "29.0.0", default-features = false }
sp-offchain = { version = "29.0.0", default-features = false }
sp-runtime = { version = "34.0.0", default-features = false }
sp-session = { version = "30.0.0", default-features = false }
sp-std = { version = "14.0.0", default-features = false }
sp-transaction-pool = { version = "29.0.0", default-features = false }
sp-version = { version = "32.0.0", default-features = false }
sp-io = { version = "33.0.0", default-features = false }
sp-application-crypto= { version = "33.0.0", default-features = false }

# Polkadot
pallet-xcm = { version = "10.0.1", default-features = false }
polkadot-parachain-primitives = { version = "9.0.0", default-features = false }
polkadot-runtime-common = { version = "10.0.0", default-features = false }
xcm = { version = "10.0.0", package = "staging-xcm", default-features = false }
xcm-builder = { version = "10.0.0", package = "staging-xcm-builder", default-features = false }
xcm-executor = { version = "10.0.0", package = "staging-xcm-executor", default-features = false }

# Cumulus
cumulus-pallet-aura-ext = { version = "0.10.0", default-features = false }
cumulus-pallet-parachain-system = { version = "0.10.0", default-features = false, features = ["parameterized-consensus-hook"] }
cumulus-pallet-session-benchmarking = { version = "12.0.0", default-features = false }
cumulus-pallet-xcm = { version = "0.10.0", default-features = false }
cumulus-pallet-xcmp-queue = { version = "0.10.0", default-features = false }
cumulus-primitives-core = { version = "0.10.0", default-features = false }
cumulus-primitives-utility = { version = "0.10.0", default-features = false }
cumulus-primitives-storage-weight-reclaim = { version = "1.0.0", default-features = false }
pallet-collator-selection = { version = "12.0.0", default-features = false }
parachains-common = { version = "10.0.0", default-features = false }
parachain-info = { version = "0.10.0", package = "staging-parachain-info", default-features = false }

substrate-wasm-builder = { version = "20.0.0" }
substrate-build-script-utils = { version = "11.0.0" }

# Substrate Client
clap = { version = "4.5.1", features = ["derive"] }
jsonrpsee = { version = "0.22", features = ["server"] }
futures = "0.3.28"
frame-benchmarking-cli = { version = "35.0.1" }
pallet-transaction-payment-rpc = { version = "33.0.0" }
sc-basic-authorship = { version = "0.37.0" }
sc-chain-spec = { version = "30.0.1" }
sc-cli = { version = "0.39.0" }
sc-client-api = { version = "31.0.0" }
sc-offchain = { version = "32.0.0" }
sc-consensus = { version = "0.36.0" }
sc-executor = { version = "0.35.0" }
sc-network = { version = "0.37.0" }
sc-network-sync = { version = "0.36.0" }
sc-rpc = { version = "32.0.0" }
sc-service = { version = "0.38.0" }
sc-sysinfo = { version = "30.0.0" }
sc-telemetry = { version = "17.0.0" }
sc-tracing = { version = "31.0.0" }
sc-transaction-pool = { version = "31.0.0" }
sc-transaction-pool-api = { version = "31.0.0" }
sp-blockchain = { version = "31.0.0" }
sp-keystore = { version = "0.37.0" }
sp-timestamp = { version = "29.0.0" }
substrate-frame-rpc-system = { version = "31.0.0" }
substrate-prometheus-endpoint = { version = "0.17.0" }

# Polkadot Client
polkadot-cli = { version = "10.0.0", features = ["rococo-native"] }
polkadot-primitives = { version = "10.0.0" }
cumulus-client-cli = { version = "0.10.0" }
cumulus-client-collator = { version = "0.10.0" }
cumulus-client-consensus-aura = { path = "client/cumulus-client-consensus-aura-0.10.0" }
cumulus-client-consensus-common = { version = "0.10.0" }
cumulus-client-consensus-proposer = { version = "0.10.0" }
cumulus-client-service = { version = "0.10.0" }
cumulus-primitives-parachain-inherent = { version = "0.10.0" }
cumulus-relay-chain-interface = { version = "0.10.0" }

# Local
popsicle-runtime = { path = "./runtime", default-features = false }
pallet-sequencer-grouping ={ path = "./pallets/sequencer-grouping", default-features = false }
pallet-sequencer-staking ={ path = "./pallets/sequencer-staking", default-features = false }
pallet-container = { path = "pallets/container", default-features = false }
primitives-container = {  path="./primitives/container", default-features = false }
primitives-vrf = { path = "./primitives/vrf", default-features = false }
popsicle-vrf = { path = "client/vrf", default-features = false }